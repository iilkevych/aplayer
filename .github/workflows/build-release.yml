name: Build and Release APK

on:
  push:
    tags:
      - 'v*'  # Triggers on version tags like v1.0.0
  workflow_dispatch:  # Allows manual trigger

permissions:
  contents: write  # Required to create releases and upload assets

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Setup Android SDK
      uses: android-actions/setup-android@v3

    - name: Cache Gradle packages
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-

    - name: Make gradlew executable
      run: chmod +x ./gradlew

    - name: Build Debug APK
      run: ./gradlew assembleDebug

    - name: Upload Debug APK
      uses: actions/upload-artifact@v4
      with:
        name: debug-apk
        path: app/build/outputs/apk/debug/*.apk

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')

    steps:
    - name: Download Debug APK
      uses: actions/download-artifact@v4
      with:
        name: debug-apk
        path: ./debug-apk/

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          ./debug-apk/*.apk
        draft: false
        prerelease: false
        generate_release_notes: true
        body: |
          ## APlayer Release

          ### APK Files:
          - **app-debug.apk** - Debug build (recommended for testing, easier to install)

          ### Installation Instructions:
          1. Download **app-debug.apk** (recommended)
          2. Install on your Meta Quest device:
             - Via adb: `adb install app-debug.apk`
             - Via SideQuest: Drag and drop the APK file
          3. Download an MP4 video file to your Quest's Downloads folder
          4. Launch APlayer - it will automatically use the most recent MP4 file

          ### Changes:
          - Automatic MP4 file detection from Downloads folder
          - Improved video decoder performance
          - Dynamic text scaling based on window size
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}